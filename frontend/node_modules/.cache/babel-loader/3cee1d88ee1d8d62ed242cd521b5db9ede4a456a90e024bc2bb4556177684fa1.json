{"ast":null,"code":"var _jsxFileName = \"/home/user/twiroller/twiroller/frontend/src/components/Home.tsx\",\n  _s = $RefreshSig$();\nimport { TopContainer, LoaderContainer, TweetImageContainer, TweetImage, InfoText, TextContainer, SubmitSection, TextSection, Title, ContentSection, ContentContainer } from \"./Home.styles\";\nimport { useState, useRef, useEffect } from \"react\";\nimport \"../styles/global-style.css\";\nimport UrlInputSection from \"./UrlInputSection\";\nimport Modal from \"./Modal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const urlInput = useRef(null);\n  const [fetchedData, setFetchedData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    console.log(process.env.REACT_APP_TWITTER_CONSUMER_KEY);\n  }, []);\n  async function fetchCrawledData() {\n    setIsLoading(true);\n    const url = \"http://localhost:8080/crawl\";\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      setFetchedData(data.nonLoginAccessData);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n  const clearInputField = () => {\n    if (urlInput.current) {\n      urlInput.current.value = \"\";\n      setErrorMessage(\"\");\n    }\n  };\n  async function handleSubmit() {\n    var _urlInput$current;\n    const urlInputData = (_urlInput$current = urlInput.current) === null || _urlInput$current === void 0 ? void 0 : _urlInput$current.value;\n    if (!urlInputData) {\n      setErrorMessage(\"Url을 입력해주세요!\");\n      return;\n    }\n    const urlPattern = /^https:\\/\\/x\\.com\\//;\n    if (!urlPattern.test(urlInputData)) {\n      setErrorMessage(\"유효한 Url 주소인지 다시 한번 확인해주세요!\");\n      return;\n    }\n    setErrorMessage(\"\");\n    setIsLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:8080/url\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          url: urlInputData\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      console.log(\"URL successfully sent to server\");\n      await fetchCrawledData();\n    } catch (error) {\n      console.error(\"Error sending URL data:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(TopContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextSection, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Twiroller\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoText, {\n        children: \"\\uBCF8\\uBB38\\uC744 \\uCD94\\uCD9C\\uD560 \\uD2B8\\uC717 \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n        children: [/*#__PURE__*/_jsxDEV(SubmitSection, {\n          children: /*#__PURE__*/_jsxDEV(UrlInputSection, {\n            urlInput: urlInput,\n            clearInputField: clearInputField,\n            handleSubmit: handleSubmit,\n            errorMessage: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContentSection, {\n          children: /*#__PURE__*/_jsxDEV(ContentContainer, {\n            children: isLoading ? /*#__PURE__*/_jsxDEV(LoaderContainer, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loader\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this) : fetchedData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: fetchedData.text.map((text, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: text\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TweetImageContainer, {\n                children: fetchedData.images.map((src, index) => /*#__PURE__*/_jsxDEV(TweetImage, {\n                  src: src,\n                  alt: `tweet-img-${index}`\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : \"불러올 데이터가 없습니다!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"ThqHkabYUXdr+ZaYehdmec9j5Ec=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["TopContainer","LoaderContainer","TweetImageContainer","TweetImage","InfoText","TextContainer","SubmitSection","TextSection","Title","ContentSection","ContentContainer","useState","useRef","useEffect","UrlInputSection","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","urlInput","fetchedData","setFetchedData","isLoading","setIsLoading","errorMessage","setErrorMessage","console","log","process","env","REACT_APP_TWITTER_CONSUMER_KEY","fetchCrawledData","url","response","fetch","ok","Error","data","json","nonLoginAccessData","error","clearInputField","current","value","handleSubmit","_urlInput$current","urlInputData","urlPattern","test","method","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","className","text","map","index","images","src","alt","_c","$RefreshReg$"],"sources":["/home/user/twiroller/twiroller/frontend/src/components/Home.tsx"],"sourcesContent":["import {\n  TopContainer,\n  LoaderContainer,\n  TweetImageContainer,\n  TweetImage,\n  InfoText,\n  TextContainer,\n  SubmitSection,\n  TextSection,\n  Title,\n  ContentSection,\n  ContentContainer,\n} from \"./Home.styles\";\nimport { useState, useRef, useEffect } from \"react\";\nimport \"../styles/global-style.css\";\nimport UrlInputSection from \"./UrlInputSection\";\nimport Modal from \"./Modal\";\n\nfunction Home() {\n  const urlInput = useRef<HTMLInputElement>(null);\n  const [fetchedData, setFetchedData] = useState<{\n    text: string[];\n    images: string[];\n  } | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n\n  useEffect(() => {\n    console.log(process.env.REACT_APP_TWITTER_CONSUMER_KEY);\n  }, []);\n\n  async function fetchCrawledData() {\n    setIsLoading(true);\n    const url = \"http://localhost:8080/crawl\";\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      setFetchedData(data.nonLoginAccessData);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  const clearInputField = () => {\n    if (urlInput.current) {\n      urlInput.current.value = \"\";\n      setErrorMessage(\"\");\n    }\n  };\n\n  async function handleSubmit() {\n    const urlInputData = urlInput.current?.value;\n    if (!urlInputData) {\n      setErrorMessage(\"Url을 입력해주세요!\");\n      return;\n    }\n\n    const urlPattern = /^https:\\/\\/x\\.com\\//;\n    if (!urlPattern.test(urlInputData)) {\n      setErrorMessage(\"유효한 Url 주소인지 다시 한번 확인해주세요!\");\n      return;\n    }\n\n    setErrorMessage(\"\");\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(\"http://localhost:8080/url\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ url: urlInputData }),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      console.log(\"URL successfully sent to server\");\n      await fetchCrawledData();\n    } catch (error) {\n      console.error(\"Error sending URL data:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <TopContainer>\n      <Modal />\n      <TextSection>\n        <Title>Twiroller</Title>\n        <InfoText>본문을 추출할 트윗 주소를 입력해주세요.</InfoText>\n        <TextContainer>\n          <SubmitSection>\n            <UrlInputSection\n              urlInput={urlInput}\n              clearInputField={clearInputField}\n              handleSubmit={handleSubmit}\n              errorMessage={errorMessage}\n            />\n          </SubmitSection>\n          <ContentSection>\n            <ContentContainer>\n              {isLoading ? (\n                <LoaderContainer>\n                  <div className=\"loader\"></div>\n                </LoaderContainer>\n              ) : fetchedData ? (\n                <>\n                  <div>\n                    {fetchedData.text.map((text, index) => (\n                      <p key={index}>{text}</p>\n                    ))}\n                  </div>\n                  <TweetImageContainer>\n                    {fetchedData.images.map((src, index) => (\n                      <TweetImage key={index} src={src} alt={`tweet-img-${index}`} />\n                    ))}\n                  </TweetImageContainer>\n                </>\n              ) : (\n                \"불러올 데이터가 없습니다!\"\n              )}\n            </ContentContainer>\n          </ContentSection>\n        </TextContainer>\n      </TextSection>\n    </TopContainer>\n  );\n}\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}